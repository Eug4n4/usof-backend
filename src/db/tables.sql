CREATE DATABASE IF NOT EXISTS usf;
CREATE USER IF NOT EXISTS 'ykazka'@'localhost' IDENTIFIED BY 'securepass';
GRANT ALL ON usf.* TO 'ykazka'@'localhost';

use usf;

CREATE TABLE IF NOT EXISTS roles(
id INT NOT NULL AUTO_INCREMENT,
name VARCHAR(32) NOT NULL UNIQUE DEFAULT 'user',
PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS users(
id INT NOT NULL AUTO_INCREMENT,
login VARCHAR(20) NOT NULL UNIQUE,
password CHAR(32) NOT NULL,
full_name VARCHAR(50) NOT NULL,
email VARCHAR(255) NOT NULL,
photo TEXT NOT NULL,
rating INT UNSIGNED DEFAULT 0,
role_id INT NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(role_id) REFERENCES roles(id)
);


CREATE TABLE IF NOT EXISTS posts(
id INT NOT NULL AUTO_INCREMENT,
author INT NOT NULL,
title VARCHAR(150) NOT NULL,
publish_date DATE NOT NULL,
content TEXT NOT NULL,
status TINYINT(1) DEFAULT 1,
PRIMARY KEY(id),
FOREIGN KEY(author) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS categories(
id INT NOT NULL AUTO_INCREMENT,
title VARCHAR(100) NOT NULL,
description VARCHAR(200) NOT NULL,
PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS post_categories(
post_id INT NOT NULL,
category_id INT NOT NULL,
PRIMARY KEY(post_id, category_id),
FOREIGN KEY(post_id) REFERENCES posts(id),
FOREIGN KEY(category_id) REFERENCES categories(id)
);

CREATE TABLE IF NOT EXISTS comments(
id INT NOT NULL AUTO_INCREMENT,
author INT NOT NULL,
publish_date DATE NOT NULL,
content TEXT NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(author) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS likes(
id INT NOT NULL AUTO_INCREMENT,
author INT NOT NULL,
publish_date DATE NOT NULL,
type TINYINT(1) NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(author) REFERENCES users(id)
);