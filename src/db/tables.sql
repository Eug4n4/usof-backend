CREATE DATABASE IF NOT EXISTS usf;
CREATE USER IF NOT EXISTS 'ykazka'@'localhost' IDENTIFIED BY 'securepass';
GRANT ALL ON usf.* TO 'ykazka'@'localhost';

use usf;

CREATE TABLE IF NOT EXISTS roles(
id INT NOT NULL AUTO_INCREMENT,
name VARCHAR(32) NOT NULL UNIQUE,
PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS users(
id INT NOT NULL AUTO_INCREMENT,
login VARCHAR(20) NOT NULL UNIQUE,
password CHAR(60) NOT NULL,
full_name VARCHAR(50) NOT NULL,
email VARCHAR(255) NOT NULL UNIQUE,
photo VARCHAR(255) NOT NULL DEFAULT 'uploads/avatars/user.png',
rating INT UNSIGNED DEFAULT 0,
role_id INT NOT NULL,
is_active TINYINT(1) DEFAULT 0,
PRIMARY KEY(id),
FOREIGN KEY(role_id) REFERENCES roles(id)
);


CREATE TABLE IF NOT EXISTS posts(
id INT NOT NULL AUTO_INCREMENT,
author INT NOT NULL,
title VARCHAR(150) NOT NULL,
publish_date DATE NOT NULL DEFAULT (CURDATE()),
content TEXT NOT NULL,
is_active TINYINT(1) DEFAULT 1,
PRIMARY KEY(id),
FOREIGN KEY(author) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS categories(
id INT NOT NULL AUTO_INCREMENT,
title VARCHAR(100) NOT NULL UNIQUE,
description VARCHAR(200),
PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS post_categories(
post_id INT NOT NULL,
category_id INT NOT NULL,
PRIMARY KEY(post_id, category_id),
FOREIGN KEY(post_id) REFERENCES posts(id) ON DELETE CASCADE,
FOREIGN KEY(category_id) REFERENCES categories(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments(
id INT NOT NULL AUTO_INCREMENT,
author INT NOT NULL,
post_id INT NOT NULL,
publish_date DATETIME NOT NULL DEFAULT (NOW()),
content TEXT NOT NULL,
is_active TINYINT(1) DEFAULT 1;
PRIMARY KEY(id),
FOREIGN KEY(author) REFERENCES users(id) ON DELETE CASCADE,
FOREIGN KEY(post_id) REFERENCES posts(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS likes(
id INT NOT NULL AUTO_INCREMENT,
author INT NOT NULL,
post_id INT,
comment_id INT 
publish_date DATE NOT NULL DEFAULT (CURDATE()),
type TINYINT(1) NOT NULL,
PRIMARY KEY(id),
UNIQUE (author, post_id),
UNIQUE (author, comment_id),
FOREIGN KEY(author) REFERENCES users(id) ON DELETE CASCADE,
FOREIGN KEY(post_id) REFERENCES posts(id) ON DELETE CASCADE,
FOREIGN KEY(comment_id) REFERENCES comments(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS tokens(
user_id INT NOT NULL,
refresh VARCHAR(255) NOT NULL,
PRIMARY KEY(user_id),
FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE
);